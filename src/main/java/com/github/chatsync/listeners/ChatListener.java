package com.github.chatsync.listeners;

import com.github.chatsync.ChatSync;
import com.github.chatsync.managers.ChatFormatter;
import com.github.chatsync.managers.TelegramManager;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.PlayerDeathEvent;
import org.bukkit.event.player.AsyncPlayerChatEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.event.player.PlayerAdvancementDoneEvent;

import java.util.List;

public class ChatListener implements Listener {
    private final ChatSync plugin;
    private final TelegramManager telegramManager;
    
    public ChatListener(ChatSync plugin) {
        this.plugin = plugin;
        this.telegramManager = plugin.getTelegramManager();
    }
    
    @EventHandler
    public void onPlayerChat(AsyncPlayerChatEvent event) {
        if (!telegramManager.isEnabled()) return;
        if (!plugin.getConfig().getBoolean("chat-sync.enabled", true)) return;
        
        Player player = event.getPlayer();
        String message = event.getMessage();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
        List<String> bannedWords = plugin.getConfig().getStringList("chat-sync.banned-words");
        if (ChatFormatter.containsBannedWords(message, bannedWords)) {
            plugin.getLogger().info("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç " + player.getName() + " —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ –Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram");
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è
        int minLength = plugin.getConfig().getInt("chat-sync.min-message-length", 2);
        if (message.trim().length() < minLength) {
            return;
        }
        
        // –í –º–µ—Ç–æ–¥–µ onPlayerChat –∑–∞–º–µ–Ω–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É:
        String prefix = ChatFormatter.getPlayerPrefix(player); // –î–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ç–∞–∫
        String playerName = ChatFormatter.getPlayerDisplayName(player);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        telegramManager.sendChatMessage(playerName, message, prefix);
        
        // –õ–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å
        plugin.getLogger().info("üí¨ " + playerName + ": " + message);
    }
    
    @EventHandler
    public void onPlayerJoin(PlayerJoinEvent event) {
        if (!telegramManager.isEnabled()) return;
        
        Player player = event.getPlayer();
        String playerName = ChatFormatter.getPlayerDisplayName(player);
        
        telegramManager.sendJoinMessage(playerName);
        plugin.getLogger().info("üü¢ " + playerName + " –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É");
    }
    
    @EventHandler
    public void onPlayerQuit(PlayerQuitEvent event) {
        if (!telegramManager.isEnabled()) return;
        
        Player player = event.getPlayer();
        String playerName = ChatFormatter.getPlayerDisplayName(player);
        
        telegramManager.sendLeaveMessage(playerName);
        plugin.getLogger().info("üî¥ " + playerName + " –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä");
    }
    
    @EventHandler
    public void onPlayerDeath(PlayerDeathEvent event) {
        if (!telegramManager.isEnabled()) return;
        
        String deathMessage = ChatFormatter.cleanMinecraftFormatting(event.getDeathMessage());
        telegramManager.sendDeathMessage(deathMessage);
        plugin.getLogger().info("üíÄ " + deathMessage);
    }
    
    @EventHandler
    public void onPlayerAdvancement(PlayerAdvancementDoneEvent event) {
        if (!telegramManager.isEnabled()) return;
        
        Player player = event.getPlayer();
        String advancementKey = event.getAdvancement().getKey().getKey();
        
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã
        if (advancementKey.startsWith("recipes/")) {
            return;
        }
        
        String playerName = ChatFormatter.getPlayerDisplayName(player);
        String advancementName = getAdvancementName(advancementKey);
        
        telegramManager.sendAchievementMessage(playerName, advancementName);
        plugin.getLogger().info("üèÜ " + playerName + " –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: " + advancementName);
    }
    
    private String getAdvancementName(String key) {
        // –ü—Ä–æ—Å—Ç–æ–π –º–∞–ø–ø–∏–Ω–≥ –∫–ª—é—á–µ–π –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –Ω–∞ —Ä—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
        switch (key) {
            case "story/root": return "–ù–∞—á–∞–ª–æ –∏—Å—Ç–æ—Ä–∏–∏";
            case "story/mine_stone": return "–ö–∞–º–µ–Ω–Ω—ã–π –≤–µ–∫";
            case "story/iron_tools": return "–ñ–µ–ª–µ–∑–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã";
            case "story/obtain_armor": return "–ë—Ä–æ–Ω—è";
            case "story/deflect_arrow": return "–ó–∞—â–∏—Ç–∞";
            case "story/enchant_item": return "–ó–∞—á–∞—Ä–æ–≤–∞–Ω–∏–µ";
            case "story/enter_the_end": return "–≠–Ω–¥";
            case "story/follow_ender_eye": return "–ì–ª–∞–∑ —ç–Ω–¥–µ—Ä–∞";
            case "story/enter_the_nether": return "–ù–µ–∑–µ—Ä";
            case "story/upgrade_tools": return "–£–ª—É—á—à–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤";
            case "story/smelt_iron": return "–í—ã–ø–ª–∞–≤–∫–∞ –∂–µ–ª–µ–∑–∞";
            case "story/cure_zombie_villager": return "–õ–µ—á–µ–Ω–∏–µ –∑–æ–º–±–∏-–∂–∏—Ç–µ–ª—è";
            case "story/shiny_gear": return "–ë–ª–µ—Å—Ç—è—â–∞—è —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∞";
            default: return key.replace("_", " ");
        }
    }
}
